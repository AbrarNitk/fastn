name: Build debian release

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release debian'
        required: true
      productionRelease:
        type: boolean
        description: Mark release as production ready
jobs:
  release-ubuntu:
    name: Build for Linux
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      BUILD_TARGET: x86_64-unknown-linux-musl
      BINARY_NAME: fpm
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ftd/target
            fifthtry_content/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build-debian
        run: cargo deb
      - uses: actions/upload-artifact@v2
        with:
          name: fpm_debian
          path: target/debian/${{ env.BINARY_NAME }}*

  create-release:
    name: Create github tag and release
    runs-on: ubuntu-latest
    needs: [release-ubuntu, release-macos, release-windows]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu_x64_latest
          path: ~/download/ubuntu
      - name: Rename assets
        run: |
          mv ~/download/ubuntu/fpm_0.1.10_amd64.deb ~/download/ubuntu_x64_latest/${{ env.BINARY_NAME }}*
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "~/download/ubuntu_x64_latest/${{ env.BINARY_NAME }}*"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.releaseTag }}
          prerelease: ${{ github.event.inputs.productionRelease && github.event.inputs.productionRelease == 'false' }}